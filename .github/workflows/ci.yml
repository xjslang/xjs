name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Download dependencies
      run: mage install

    - name: Run linting
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.23'
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        mage lint

    - name: Run tests
      run: mage test

    - name: Run benchmarks
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.23'
      run: mage bench

  race-test:
    name: Race Detection
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Download dependencies
      run: mage install

    - name: Run race tests
      run: go test -race -v ./...

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Install Mage
      run: go install github.com/magefile/mage@latest

    - name: Download dependencies
      run: mage install

    - name: Run tests with coverage
      run: go test -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella